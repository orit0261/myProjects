create procedure prod.stardox_lcl_update_doc_table_name(p_tenantid text, p_document_serial integer, p_table_name text)
    language sql
as
$$
UPDATE prod.documents
   SET
       table_name = p_table_name
 WHERE
     document_serial = p_document_serial
	 AND "tenantId"= p_tenantid
$$;

alter procedure prod.stardox_lcl_update_doc_table_name(text, integer, text) owner to "Postgresadmin";


create procedure prod.stardox_etl(p_document_serial integer, p_table_name text, p_tab_index integer)
    language plpgsql
as
$$
BEGIN
    IF lower(p_table_name) LIKE '%air%' THEN
        CALL prod.stardox_air_etl(p_document_serial, p_table_name, p_tab_index);

    ELSEIF lower(p_table_name) LIKE '%lcl%' THEN
        CALL prod.stardox_lcl_etl(p_document_serial, p_table_name, p_tab_index);

    ELSEIF lower(p_table_name) LIKE '%fcl%' THEN
        CALL prod.stardox_fcl_etl(p_document_serial, p_table_name, p_tab_index);
    END IF;
END;
$$;

alter procedure prod.stardox_etl(integer, text, integer) owner to "Postgresadmin";



create procedure prod.stardox_lcl_etl(p_document_serial integer, p_table_name text, p_tab_index integer)
    language sql
as
$$
CALL prod.stardox_update_doc_table_name(p_document_serial, p_table_name);
CALL prod.stardox_lcl_create_doc_routes(p_document_serial, p_table_name, p_tab_index);
CALL prod.stardox_lcl_insert_doc_routes(p_document_serial, p_table_name, p_tab_index);
CALL prod.stardox_lcl_insert_doc_price_exceptions(p_document_serial, p_table_name, p_tab_index);
CALL prod.stardox_lcl_insert_doc_other_exceptions(p_document_serial, p_table_name, p_tab_index);
CALL prod.stardox_update_num_exceptions(p_document_serial, p_tab_index);
CALL prod.stardox_lcl_insert_doc_charges(p_document_serial, p_table_name, p_tab_index);
call prod.stardox_lcl_routing_matrix(p_document_serial, p_table_name, p_tab_index);
    
UPDATE prod.documents
   SET document_status = 'ACTIVATED'
 WHERE document_serial = p_document_serial;
$$;

alter procedure prod.stardox_lcl_etl(integer, text, integer) owner to "Postgresadmin";


create procedure prod.stardox_lcl_insert_doc_charges(p_document_serial integer, p_table_name text, p_tab_index integer)
    language plpgsql
as
$$
BEGIN
    ----------------------------------------COLOADERS----------------------------------------
    IF p_table_name = 'lcl_coloaders' THEN
        INSERT INTO prod.document_charges("tenantId",
                                          document_serial,
                                          charge_type,
                                          qtty,
                                          units,
                                          price_value,
                                          price_currency_code,
                                          remarks,
                                          route_number,
                                          record_id,
                                          tab_index,
                                          last30d_value,
                                          last30d_currency_code,
                                          last60d_value,
                                          last60d_currency_code,
                                          last90d_value,
                                          last90d_currency_code,
                                          last120d_value,
                                          last120d_currency_code)
        SELECT '005237f9-6779-4c68-89d6-d0800559d4f4',
               m.document_serial,
               concat_ws('-', m.charge_type, nullif(m.charge_code, ''), m.charge_name),
               1,
               m.unit_type,
               m.rate_per_unit,
               m.currency,
               concat_ws('|', concat('Co-loader:', m.coloader), concat('Frequency:', m.frequency),
                         concat('Trans Time:', m.trans_time), concat('Remarks:', m.remarks)),
               m.route_number,
               m.record_id,
               m.tab_index,
               p30.rate_per_unit,
               p30.currency,
               p60.rate_per_unit,
               p60.currency,
               p90.rate_per_unit,
               p90.currency,
               p120.rate_per_unit,
               p120.currency
          FROM mrr.lcl_coloaders m
               LEFT JOIN (SELECT rate_per_unit,
                                 currency,
                                 coloader,
                                 origin_country,
                                 origin_city,
                                 origin_code,
                                 destination_country,
                                 destination_city,
                                 destination_code,
                                 charge_type,
                                 charge_code,
                                 charge_name,
                                 row_number()
                                 OVER (PARTITION BY coloader, origin_country, origin_city, origin_code, destination_country, destination_city, destination_code, charge_type, charge_code, charge_name ORDER BY valid_to_date) AS rn
                            FROM prod.lcl_coloaders
                           WHERE valid_to_date >= (current_date - 30)
                           ORDER BY valid_to_date) AS p30
               ON m.coloader = p30.coloader AND m.origin_country = p30.origin_country AND
                  m.origin_city = p30.origin_city AND m.origin_code = p30.origin_code AND
                  m.destination_country = p30.destination_country AND m.destination_city = p30.destination_city AND
                  m.destination_code = p30.destination_code AND m.charge_type = p30.charge_type AND
                  m.charge_code = p30.charge_code AND m.charge_name = p30.charge_name AND p30.rn = 1
               LEFT JOIN (SELECT rate_per_unit,
                                 currency,
                                 coloader,
                                 origin_country,
                                 origin_city,
                                 origin_code,
                                 destination_country,
                                 destination_city,
                                 destination_code,
                                 charge_type,
                                 charge_code,
                                 charge_name,
                                 row_number()
                                 OVER (PARTITION BY coloader, origin_country, origin_city, origin_code, destination_country, destination_city, destination_code, charge_type, charge_code, charge_name ORDER BY valid_to_date) AS rn
                            FROM prod.lcl_coloaders
                           WHERE valid_to_date >= (current_date - 60)
                           ORDER BY valid_to_date) AS p60
               ON m.coloader = p60.coloader AND m.origin_country = p60.origin_country AND
                  m.origin_city = p60.origin_city AND m.origin_code = p60.origin_code AND
                  m.destination_country = p60.destination_country AND m.destination_city = p60.destination_city AND
                  m.destination_code = p60.destination_code AND m.charge_type = p60.charge_type AND
                  m.charge_code = p60.charge_code AND m.charge_name = p60.charge_name AND p60.rn = 1
               LEFT JOIN (SELECT rate_per_unit,
                                 currency,
                                 coloader,
                                 origin_country,
                                 origin_city,
                                 origin_code,
                                 destination_country,
                                 destination_city,
                                 destination_code,
                                 charge_type,
                                 charge_code,
                                 charge_name,
                                 row_number()
                                 OVER (PARTITION BY coloader, origin_country, origin_city, origin_code, destination_country, destination_city, destination_code, charge_type, charge_code, charge_name ORDER BY valid_to_date) AS rn
                            FROM prod.lcl_coloaders
                           WHERE valid_to_date >= (current_date - 90)
                           ORDER BY valid_to_date) AS p90
               ON m.coloader = p90.coloader AND m.origin_country = p90.origin_country AND
                  m.origin_city = p90.origin_city AND m.origin_code = p90.origin_code AND
                  m.destination_country = p90.destination_country AND m.destination_city = p90.destination_city AND
                  m.destination_code = p90.destination_code AND m.charge_type = p90.charge_type AND
                  m.charge_code = p90.charge_code AND m.charge_name = p90.charge_name AND p90.rn = 1
               LEFT JOIN (SELECT rate_per_unit,
                                 currency,
                                 coloader,
                                 origin_country,
                                 origin_city,
                                 origin_code,
                                 destination_country,
                                 destination_city,
                                 destination_code,
                                 charge_type,
                                 charge_code,
                                 charge_name,
                                 row_number()
                                 OVER (PARTITION BY coloader, origin_country, origin_city, origin_code, destination_country, destination_city, destination_code, charge_type, charge_code, charge_name ORDER BY valid_to_date) AS rn
                            FROM prod.lcl_coloaders
                           WHERE valid_to_date >= (current_date - 120)
                           ORDER BY valid_to_date) AS p120
               ON m.coloader = p120.coloader AND m.origin_country = p120.origin_country AND
                  m.origin_city = p120.origin_city AND m.origin_code = p120.origin_code AND
                  m.destination_country = p120.destination_country AND m.destination_city = p120.destination_city AND
                  m.destination_code = p120.destination_code AND m.charge_type = p120.charge_type AND
                  m.charge_code = p120.charge_code AND m.charge_name = p120.charge_name AND p120.rn = 1
         WHERE m.document_serial = p_document_serial
           AND m.tab_index = p_tab_index
           AND m.record_id NOT IN (SELECT e.record_id
                                     FROM prod.document_exceptions AS e
                                    WHERE e.document_serial = p_document_serial AND e.tab_index = p_tab_index);

        ----------------------------------------MARGINS----------------------------------------
    ELSEIF p_table_name = 'lcl_margins' THEN
        INSERT INTO prod.document_charges("tenantId",
                                          document_serial,
                                          charge_type,
                                          qtty,
                                          units,
                                          price_value,
                                          price_currency_code,
                                          remarks,
                                          route_number,
                                          record_id,
                                          tab_index,
                                          last30d_value,
                                          last30d_currency_code,
                                          last60d_value,
                                          last60d_currency_code,
                                          last90d_value,
                                          last90d_currency_code,
                                          last120d_value,
                                          last120d_currency_code)
        SELECT '005237f9-6779-4c68-89d6-d0800559d4f4',
               m.document_serial,
               concat_ws('-', m.margin_type, m.charge_name),
               1,
               'Per KG',
               m.rate,
               m.currency,
               concat_ws('|', concat('Co-loader:', m.coloader), concat('Tender:', m.tenders), concat('Tier:', m.tier)),
               m.route_number,
               m.record_id,
               m.tab_index,
               p30.rate,
               p30.currency,
               p60.rate,
               p60.currency,
               p90.rate,
               p90.currency,
               p120.rate,
               p120.currency
          FROM mrr.lcl_margins AS m
               LEFT JOIN(SELECT rate,
                                currency,
                                origin_sector,
                                origin_district,
                                origin_country,
                                origin_port,
                                destination_sector,
                                destination_district,
                                destination_country,
                                destination_port,
                                charge_name,
                                tier,
                                coloader,
                                margin_type,
                                row_number()
                                OVER (PARTITION BY origin_sector, origin_district, origin_country, origin_port, destination_sector, destination_district, destination_country, destination_port, charge_name, tier, coloader, margin_type ORDER BY valid_to_date) AS rn
                           FROM prod.lcl_margins
                          WHERE valid_to_date >= (current_date - 30)
                          ORDER BY valid_to_date) AS p30
               ON m.origin_sector = p30.origin_sector AND m.origin_district = p30.origin_district AND
                  m.origin_country = p30.origin_country AND m.origin_port = p30.origin_port AND
                  m.destination_sector = p30.destination_sector AND
                  m.destination_district = p30.destination_district AND
                  m.destination_country = p30.destination_country AND m.destination_port = p30.destination_port AND
                  m.charge_name = p30.charge_name AND m.tier = p30.tier AND m.coloader = p30.coloader AND
                  m.margin_type = p30.margin_type AND p30.rn = 1
               LEFT JOIN(SELECT rate,
                                currency,
                                origin_sector,
                                origin_district,
                                origin_country,
                                origin_port,
                                destination_sector,
                                destination_district,
                                destination_country,
                                destination_port,
                                charge_name,
                                tier,
                                coloader,
                                margin_type,
                                row_number()
                                OVER (PARTITION BY origin_sector, origin_district, origin_country, origin_port, destination_sector, destination_district, destination_country, destination_port, charge_name, tier, coloader, margin_type ORDER BY valid_to_date) AS rn
                           FROM prod.lcl_margins
                          WHERE valid_to_date >= (current_date - 60)
                          ORDER BY valid_to_date) AS p60
               ON m.origin_sector = p60.origin_sector AND m.origin_district = p60.origin_district AND
                  m.origin_country = p60.origin_country AND m.origin_port = p60.origin_port AND
                  m.destination_sector = p60.destination_sector AND
                  m.destination_district = p60.destination_district AND
                  m.destination_country = p60.destination_country AND m.destination_port = p60.destination_port AND
                  m.charge_name = p60.charge_name AND m.tier = p60.tier AND m.coloader = p60.coloader AND
                  m.margin_type = p60.margin_type AND p60.rn = 1
               LEFT JOIN(SELECT rate,
                                currency,
                                origin_sector,
                                origin_district,
                                origin_country,
                                origin_port,
                                destination_sector,
                                destination_district,
                                destination_country,
                                destination_port,
                                charge_name,
                                tier,
                                coloader,
                                margin_type,
                                row_number()
                                OVER (PARTITION BY origin_sector, origin_district, origin_country, origin_port, destination_sector, destination_district, destination_country, destination_port, charge_name, tier, coloader, margin_type ORDER BY valid_to_date) AS rn
                           FROM prod.lcl_margins
                          WHERE valid_to_date >= (current_date - 90)
                          ORDER BY valid_to_date) AS p90
               ON m.origin_sector = p90.origin_sector AND m.origin_district = p90.origin_district AND
                  m.origin_country = p90.origin_country AND m.origin_port = p90.origin_port AND
                  m.destination_sector = p90.destination_sector AND
                  m.destination_district = p90.destination_district AND
                  m.destination_country = p90.destination_country AND m.destination_port = p90.destination_port AND
                  m.charge_name = p90.charge_name AND m.tier = p90.tier AND m.coloader = p90.coloader AND
                  m.margin_type = p90.margin_type AND p90.rn = 1
               LEFT JOIN(SELECT rate,
                                currency,
                                origin_sector,
                                origin_district,
                                origin_country,
                                origin_port,
                                destination_sector,
                                destination_district,
                                destination_country,
                                destination_port,
                                charge_name,
                                tier,
                                coloader,
                                margin_type,
                                row_number()
                                OVER (PARTITION BY origin_sector, origin_district, origin_country, origin_port, destination_sector, destination_district, destination_country, destination_port, charge_name, tier, coloader, margin_type ORDER BY valid_to_date) AS rn
                           FROM prod.lcl_margins
                          WHERE valid_to_date >= (current_date - 120)
                          ORDER BY valid_to_date) AS p120
               ON m.origin_sector = p120.origin_sector AND m.origin_district = p120.origin_district AND
                  m.origin_country = p120.origin_country AND m.origin_port = p120.origin_port AND
                  m.destination_sector = p120.destination_sector AND
                  m.destination_district = p120.destination_district AND
                  m.destination_country = p120.destination_country AND m.destination_port = p120.destination_port AND
                  m.charge_name = p120.charge_name AND m.tier = p120.tier AND m.coloader = p120.coloader AND
                  m.margin_type = p120.margin_type AND p120.rn = 1
         WHERE m.document_serial = p_document_serial
           AND m.tab_index = p_tab_index
           AND m.record_id NOT IN (SELECT e.record_id
                                     FROM prod.document_exceptions AS e
                                    WHERE e.document_serial = p_document_serial AND e.tab_index = p_tab_index);

        ----------------------------------------LOCAL CHARGES----------------------------------------
    ELSEIF p_table_name = 'lcl_local_charges' THEN
        INSERT INTO prod.document_charges("tenantId",
                                          document_serial,
                                          charge_type,
                                          qtty,
                                          units,
                                          price_value,
                                          price_currency_code,
                                          remarks,
                                          route_number,
                                          record_id,
                                          tab_index,
                                          last30d_value,
                                          last30d_currency_code,
                                          last60d_value,
                                          last60d_currency_code,
                                          last90d_value,
                                          last90d_currency_code,
                                          last120d_value,
                                          last120d_currency_code)
        SELECT '005237f9-6779-4c68-89d6-d0800559d4f4',
               m.document_serial,
               concat_ws('-', m.charge_code, m.charge_name, m.charge_description),
               1,
               m.unit_type,
               m.rate_per_unit,
               m.currency,
               concat_ws('|', concat('Term:', m.term), concat('Charge Side:', m.charge_type),
                         concat('Remarks:', m.remarks)),
               m.route_number,
               m.record_id,
               m.tab_index,
               p30.rate_per_unit,
               p30.currency,
               p60.rate_per_unit,
               p60.currency,
               p90.rate_per_unit,
               p90.currency,
               p120.rate_per_unit,
               p120.currency
          FROM mrr.lcl_local_charges AS m
               LEFT JOIN (SELECT rate_per_unit,
                                 currency,
                                 charge_type,
                                 term,
                                 port_location,
                                 other_location,
                                 coloader,
                                 charge_code,
                                 charge_name,
                                 charge_description,
                                 row_number()
                                 OVER (PARTITION BY charge_type, term, port_location, other_location, coloader, charge_code, charge_name, charge_description ORDER BY valid_to_date) AS rn
                            FROM prod.lcl_local_charges
                           WHERE valid_to_date >= (current_date - 30)
                           ORDER BY valid_to_date) AS p30
               ON m.charge_type = p30.charge_type AND m.term = p30.term AND m.port_location = p30.port_location AND
                  m.other_location = p30.other_location AND m.coloader = p30.coloader AND
                  m.charge_code = p30.charge_code AND m.charge_name = p30.charge_name AND
                  m.charge_description = p30.charge_description AND p30.rn = 1
               LEFT JOIN (SELECT rate_per_unit,
                                 currency,
                                 charge_type,
                                 term,
                                 port_location,
                                 other_location,
                                 coloader,
                                 charge_code,
                                 charge_name,
                                 charge_description,
                                 row_number()
                                 OVER (PARTITION BY charge_type, term, port_location, other_location, coloader, charge_code, charge_name, charge_description ORDER BY valid_to_date) AS rn
                            FROM prod.lcl_local_charges
                           WHERE valid_to_date >= (current_date - 60)
                           ORDER BY valid_to_date) AS p60
               ON m.charge_type = p60.charge_type AND m.term = p60.term AND m.port_location = p60.port_location AND
                  m.other_location = p60.other_location AND m.coloader = p60.coloader AND
                  m.charge_code = p60.charge_code AND m.charge_name = p60.charge_name AND
                  m.charge_description = p60.charge_description AND p60.rn = 1
               LEFT JOIN (SELECT rate_per_unit,
                                 currency,
                                 charge_type,
                                 term,
                                 port_location,
                                 other_location,
                                 coloader,
                                 charge_code,
                                 charge_name,
                                 charge_description,
                                 row_number()
                                 OVER (PARTITION BY charge_type, term, port_location, other_location, coloader, charge_code, charge_name, charge_description ORDER BY valid_to_date) AS rn
                            FROM prod.lcl_local_charges
                           WHERE valid_to_date >= (current_date - 90)
                           ORDER BY valid_to_date) AS p90
               ON m.charge_type = p90.charge_type AND m.term = p90.term AND m.port_location = p90.port_location AND
                  m.other_location = p90.other_location AND m.coloader = p90.coloader AND
                  m.charge_code = p90.charge_code AND m.charge_name = p90.charge_name AND
                  m.charge_description = p90.charge_description AND p90.rn = 1
               LEFT JOIN (SELECT rate_per_unit,
                                 currency,
                                 charge_type,
                                 term,
                                 port_location,
                                 other_location,
                                 coloader,
                                 charge_code,
                                 charge_name,
                                 charge_description,
                                 row_number()
                                 OVER (PARTITION BY charge_type, term, port_location, other_location, coloader, charge_code, charge_name, charge_description ORDER BY valid_to_date) AS rn
                            FROM prod.lcl_local_charges
                           WHERE valid_to_date >= (current_date - 120)
                           ORDER BY valid_to_date) AS p120
               ON m.charge_type = p120.charge_type AND m.term = p120.term AND m.port_location = p120.port_location AND
                  m.other_location = p120.other_location AND m.coloader = p120.coloader AND
                  m.charge_code = p120.charge_code AND m.charge_name = p120.charge_name AND
                  m.charge_description = p120.charge_description AND p120.rn = 1
         WHERE m.document_serial = p_document_serial
           AND m.tab_index = p_tab_index
           AND m.record_id NOT IN (SELECT e.record_id
                                     FROM prod.document_exceptions AS e
                                    WHERE e.document_serial = p_document_serial AND e.tab_index = p_tab_index);

        ----------------------------------------PRE/ON CARRIAGE----------------------------------------
    ELSEIF p_table_name = 'lcl_pre_on_carriage' THEN
        INSERT INTO prod.document_charges("tenantId",
                                          document_serial,
                                          charge_type,
                                          qtty,
                                          units,
                                          price_value,
                                          price_currency_code,
                                          remarks,
                                          route_number,
                                          record_id,
                                          tab_index,
                                          last30d_value,
                                          last30d_currency_code,
                                          last60d_value,
                                          last60d_currency_code,
                                          last90d_value,
                                          last90d_currency_code,
                                          last120d_value,
                                          last120d_currency_code)
        SELECT '005237f9-6779-4c68-89d6-d0800559d4f4',
               m.document_serial,
               CASE WHEN lower(m.carriage) = 'on' THEN 'Air On-Carriage'
                    WHEN lower(m.carriage) = 'pre' THEN 'Air Pre-Carriage'
               END,
               1,
               m.unit,
               m.price,
               m.currency,
               concat_ws('|', concat('FromWeight:', m.from_weight), concat('ToWeight:', m.to_weight),
                         concat('UnitType:', m.unit), concat('Type:', m.type), concat('Ratio:', m.ratio),
                         concat('Remarks:', m.comment)),
               m.route_number,
               m.record_id,
               m.tab_index,
               p30.price,
               p30.currency,
               p60.price,
               p60.currency,
               p90.price,
               p90.currency,
               p120.price,
               p120.currency
          FROM mrr.air_pre_on_carriage AS m
               LEFT JOIN (SELECT price,
                                 currency,
                                 via_loc,
                                 loc,
                                 from_weight,
                                 to_weight,
                                 type,
                                 carriage,
                                 row_number()
                                 OVER (PARTITION BY via_loc, loc, from_weight, to_weight, type, carriage ORDER BY valid_to_date) AS rn
                            FROM prod.lcl_pre_on_carriage
                           WHERE valid_to_date >= (current_date - 30)
                           ORDER BY valid_to_date
                           LIMIT 1) AS p30
               ON m.via_loc = p30.via_loc AND m.loc = p30.loc AND m.from_weight = p30.from_weight AND
                  m.to_weight = p30.to_weight AND m.type = p30.type AND m.carriage = p30.carriage AND p30.rn = 1
               LEFT JOIN (SELECT price,
                                 currency,
                                 via_loc,
                                 loc,
                                 from_weight,
                                 to_weight,
                                 type,
                                 carriage,
                                 row_number()
                                 OVER (PARTITION BY via_loc, loc, from_weight, to_weight, type, carriage ORDER BY valid_to_date) AS rn
                            FROM prod.lcl_pre_on_carriage
                           WHERE valid_to_date >= (current_date - 60)
                           ORDER BY valid_to_date
                           LIMIT 1) AS p60
               ON m.via_loc = p60.via_loc AND m.loc = p60.loc AND m.from_weight = p60.from_weight AND
                  m.to_weight = p60.to_weight AND m.type = p60.type AND m.carriage = p60.carriage AND p60.rn = 1
               LEFT JOIN (SELECT price,
                                 currency,
                                 via_loc,
                                 loc,
                                 from_weight,
                                 to_weight,
                                 type,
                                 carriage,
                                 row_number()
                                 OVER (PARTITION BY via_loc, loc, from_weight, to_weight, type, carriage ORDER BY valid_to_date) AS rn
                            FROM prod.lcl_pre_on_carriage
                           WHERE valid_to_date >= (current_date - 90)
                           ORDER BY valid_to_date
                           LIMIT 1) AS p90
               ON m.via_loc = p90.via_loc AND m.loc = p90.loc AND m.from_weight = p90.from_weight AND
                  m.to_weight = p90.to_weight AND m.type = p90.type AND m.carriage = p90.carriage AND p90.rn = 1
               LEFT JOIN (SELECT price,
                                 currency,
                                 via_loc,
                                 loc,
                                 from_weight,
                                 to_weight,
                                 type,
                                 carriage,
                                 row_number()
                                 OVER (PARTITION BY via_loc, loc, from_weight, to_weight, type, carriage ORDER BY valid_to_date) AS rn
                            FROM prod.lcl_pre_on_carriage
                           WHERE valid_to_date >= (current_date - 120)
                           ORDER BY valid_to_date
                           LIMIT 1) AS p120
               ON m.via_loc = p120.via_loc AND m.loc = p120.loc AND m.from_weight = p120.from_weight AND
                  m.to_weight = p120.to_weight AND m.type = p120.type AND m.carriage = p120.carriage AND p120.rn = 1
         WHERE m.document_serial = p_document_serial
           AND m.tab_index = p_tab_index
           AND m.record_id NOT IN (SELECT e.record_id
                                     FROM prod.document_exceptions AS e
                                    WHERE e.document_serial = p_document_serial AND e.tab_index = p_tab_index);

    END IF;
END;
$$;

alter procedure prod.stardox_lcl_insert_doc_charges(integer, text, integer) owner to "Postgresadmin";

create procedure prod.stardox_lcl_insert_doc_other_exceptions(p_document_serial integer, p_table_name text, p_tab_index integer)
    language plpgsql
as
$$
BEGIN
    ----------------------------------------COLOADERS----------------------------------------
    IF p_table_name = 'lcl_coloaders' THEN
        ---------------------COLOADERS UNIT TYPE EXCEPTIONS----------------------------------
        INSERT INTO prod.document_exceptions("tenantId",
                                             document_serial,
                                             tab_index,
                                             exception_kind,
                                             exception_type,
                                             record_id,
                                             origin,
                                             destination,
                                             charge_type,
                                             charge_description,
                                             document_value,
                                             expected_value)
        SELECT '005237f9-6779-4c68-89d6-d0800559d4f4',
               m.document_serial,
               m.tab_index,
               'OTHER',
               'Unit Type Changed',
               m.record_id,
               concat(m.origin_country, m.origin_city, m.origin_code),
               concat(m.destination_country, m.destination_city, m.destination_code),
               concat_ws('-', m.charge_type, nullif(m.charge_code, ''), m.charge_name),
               concat_ws('|', concat('Co-loader:', m.coloader), concat('Unit Type:', m.unit_type),
                         concat('Frequency:', m.frequency), concat('Trans Time:', m.trans_time),
                         concat('Remarks:', m.remarks)),
               m.rate_per_unit,
               p.rate_per_unit
          FROM mrr.lcl_coloaders AS m
               INNER JOIN prod.lcl_coloaders AS p
               ON m.coloader = p.coloader AND m.origin_country = p.origin_country AND m.origin_city = p.origin_city AND
                  m.origin_code = p.origin_code AND m.destination_country = p.destination_country AND
                  m.destination_city = p.destination_city AND m.destination_code = p.destination_code AND
                  m.charge_type = p.charge_type AND m.charge_code = p.charge_code AND m.charge_name = p.charge_name AND
                  p.active = TRUE AND m.unit_type != p.unit_type
         WHERE m.document_serial = p_document_serial AND m.tab_index = p_tab_index;
        ---------------------COLOADERS FREQUENCY EXCEPTIONS----------------------------------
        INSERT INTO prod.document_exceptions("tenantId",
                                             document_serial,
                                             tab_index,
                                             exception_kind,
                                             exception_type,
                                             record_id,
                                             origin,
                                             destination,
                                             charge_type,
                                             charge_description,
                                             document_value,
                                             expected_value)
        SELECT '005237f9-6779-4c68-89d6-d0800559d4f4',
               m.document_serial,
               m.tab_index,
               'OTHER',
               'Frequency Changed',
               m.record_id,
               concat(m.origin_country, m.origin_city, m.origin_code),
               concat(m.destination_country, m.destination_city, m.destination_code),
               concat_ws('-', m.charge_type, nullif(m.charge_code, ''), m.charge_name),
               concat_ws('|', concat('Co-loader:', m.coloader), concat('Unit Type:', m.unit_type),
                         concat('Frequency:', m.frequency), concat('Trans Time:', m.trans_time),
                         concat('Remarks:', m.remarks)),
               m.frequency,
               p.frequency
          FROM mrr.lcl_coloaders AS m
               INNER JOIN prod.lcl_coloaders AS p
               ON m.coloader = p.coloader AND m.origin_country = p.origin_country AND m.origin_city = p.origin_city AND
                  m.origin_code = p.origin_code AND m.destination_country = p.destination_country AND
                  m.destination_city = p.destination_city AND m.destination_code = p.destination_code AND
                  m.charge_type = p.charge_type AND m.charge_code = p.charge_code AND m.charge_name = p.charge_name AND
                  p.active = TRUE AND m.frequency != p.frequency
         WHERE m.document_serial = p_document_serial AND m.tab_index = p_tab_index;
        ---------------------COLOADERS TRANS TIME EXCEPTIONS----------------------------------
        INSERT INTO prod.document_exceptions("tenantId",
                                             document_serial,
                                             tab_index,
                                             exception_kind,
                                             exception_type,
                                             record_id,
                                             origin,
                                             destination,
                                             charge_type,
                                             charge_description,
                                             document_value,
                                             expected_value)
        SELECT '005237f9-6779-4c68-89d6-d0800559d4f4',
               m.document_serial,
               m.tab_index,
               'OTHER',
               'Trans Time Changed',
               m.record_id,
               concat(m.origin_country, m.origin_city, m.origin_code),
               concat(m.destination_country, m.destination_city, m.destination_code),
               concat_ws('-', m.charge_type, nullif(m.charge_code, ''), m.charge_name),
               concat_ws('|', concat('Co-loader:', m.coloader), concat('Unit Type:', m.unit_type),
                         concat('Frequency:', m.frequency), concat('Trans Time:', m.trans_time),
                         concat('Remarks:', m.remarks)),
               cast(m.trans_time AS TEXT),
               cast(p.trans_time AS TEXT)
          FROM mrr.lcl_coloaders AS m
               INNER JOIN prod.lcl_coloaders AS p
               ON m.coloader = p.coloader AND m.origin_country = p.origin_country AND m.origin_city = p.origin_city AND
                  m.origin_code = p.origin_code AND m.destination_country = p.destination_country AND
                  m.destination_city = p.destination_city AND m.destination_code = p.destination_code AND
                  m.charge_type = p.charge_type AND m.charge_code = p.charge_code AND m.charge_name = p.charge_name AND
                  p.active = TRUE AND m.trans_time != p.trans_time
         WHERE m.document_serial = p_document_serial AND m.tab_index = p_tab_index;
        ---------------------COLOADERS VALIDITY EXCEPTIONS----------------------------------
    --         INSERT INTO prod.document_exceptions("tenantId", document_serial, tab_index, exception_kind, exception_type,
    --                                              record_id, origin, destination, charge_type, charge_description,
    --                                              document_value, expected_value)
    --         SELECT '005237f9-6779-4c68-89d6-d0800559d4f4',
    --                m.document_serial,
    --                m.tab_index,
    --                'OTHER',
    --                'Validity Exception',
    --                m.record_id,
    --                concat(m.origin_country, m.origin_city, m.origin_code),
    --                concat(m.destination_country, m.destination_city, m.destination_code),
    --                concat_ws('-', m.charge_type, nullif(m.charge_code, ''), m.charge_name),
    --                concat_ws('|', concat('Co-loader:', m.coloader), concat('Unit Type:', m.unit_type),
    --                          concat('Frequency:', m.frequency), concat('Trans Time:', m.trans_time),
    --                          concat('Remarks:', m.remarks)),
    --                cast(m.valid_from_date AS TEXT),
    --                concat('After - ', cast(p.valid_to_date AS TEXT))
    --           FROM mrr.lcl_coloaders                 AS m
    --                    INNER JOIN prod.lcl_coloaders AS p
    --                    ON m.coloader = p.coloader AND m.origin_country = p.origin_country AND
    --                       m.origin_city = p.origin_city AND m.origin_code = p.origin_code AND
    --                       m.destination_country = p.destination_country AND m.destination_city = p.destination_city AND
    --                       m.destination_code = p.destination_code AND m.charge_type = p.charge_type AND
    --                       m.charge_code = p.charge_code AND m.charge_name = p.charge_name AND p.active = TRUE AND
    --                       m.valid_from_date < p.valid_to_date
    --          WHERE m.document_serial = p_document_serial
    --            AND m.tab_index = p_tab_index;

    ----------------------------------------MARGINS----------------------------------------
    ELSEIF p_table_name = 'lcl_margins' THEN
        ---------------------MARGINS VALIDITY EXCEPTIONS----------------------------------
    --         INSERT INTO prod.document_exceptions("tenantId", document_serial, tab_index, exception_kind, exception_type,
    --                                              record_id, origin, destination, charge_type, charge_description,
    --                                              document_value, expected_value)
    --         SELECT '005237f9-6779-4c68-89d6-d0800559d4f4',
    --                m.document_serial,
    --                m.tab_index,
    --                'OTHER',
    --                'Validity Exception',
    --                m.record_id,
    --                concat_ws(',', m.origin_sector, m.origin_district, m.origin_country, m.origin_port),
    --                concat_ws(',', m.destination_sector, m.destination_district, m.destination_country, m.destination_port),
    --                concat_ws('-', m.margin_type, m.charge_name),
    --                concat_ws('|', concat('Co-loader:', m.coloader), concat('Tender:', m.tenders), concat('Tier:', m.tier)),
    --                cast(m.valid_from_date AS TEXT),
    --                concat('After - ', cast(p.valid_to_date AS TEXT))
    --           FROM mrr.lcl_margins                 AS m
    --                    INNER JOIN prod.lcl_margins AS p
    --                    ON m.origin_sector = p.origin_sector AND m.origin_district = p.origin_district AND
    --                       m.origin_country = p.origin_country AND m.origin_port = p.origin_port AND
    --                       m.destination_sector = p.destination_sector AND
    --                       m.destination_district = p.destination_district AND
    --                       m.destination_country = p.destination_country AND m.destination_port = p.destination_port AND
    --                       m.charge_name = p.charge_name AND m.tier = p.tier AND m.coloader = p.coloader AND
    --                       m.margin_type = p.margin_type AND p.active = TRUE AND m.valid_from_date < p.valid_to_date
    --          WHERE m.document_serial = p_document_serial
    --            AND m.tab_index = p_tab_index;


    ----------------------------------------LOCAL CHARGES----------------------------------------
    ELSEIF p_table_name = 'lcl_local_charges' THEN
        ---------------------LOCAL CHARGES UNIT TYPE EXCEPTION---------------------------
        INSERT INTO prod.document_exceptions("tenantId",
                                             document_serial,
                                             tab_index,
                                             exception_kind,
                                             exception_type,
                                             record_id,
                                             origin,
                                             destination,
                                             charge_type,
                                             charge_description,
                                             document_value,
                                             expected_value)
        SELECT '005237f9-6779-4c68-89d6-d0800559d4f4',
               m.document_serial,
               m.tab_index,
               'OTHER',
               'Unit Type Changed',
               m.record_id,
               CASE WHEN m.charge_type = 'origin' THEN m.port_location ELSE m.other_location END,
               CASE WHEN m.charge_type = 'origin' THEN m.other_location ELSE m.port_location END,
               concat_ws('-', m.charge_code, m.charge_name, m.charge_description),
               concat_ws('|', concat('Term:', m.term), concat('Charge Side:', m.charge_type),
                         concat('Unit Type:', m.unit_type)),
               m.unit_type,
               p.unit_type
          FROM mrr.lcl_local_charges AS m
               INNER JOIN prod.lcl_local_charges AS p
               ON m.charge_type = p.charge_type AND m.term = p.term AND m.port_location = p.port_location AND
                  m.other_location = p.other_location AND m.coloader = p.coloader AND m.charge_code = p.charge_code AND
                  m.charge_name = p.charge_name AND m.charge_description = p.charge_description AND p.active = TRUE AND
                  m.unit_type != p.unit_type
         WHERE m.document_serial = p_document_serial AND m.tab_index = p_tab_index;


        ----------------------------------------PRE/ON CARRIAGE----------------------------------------
    ELSEIF p_table_name = 'lcl_pre_on_carriage' THEN
        ---------------------PRE/ON CARRIAGE RATIO EXCEPTION---------------------------
        INSERT INTO prod.document_exceptions(charge_description,
                                             charge_type,
                                             document_value,
                                             destination,
                                             document_serial,
                                             exception_kind,
                                             exception_type,
                                             origin,
                                             expected_value,
                                             record_id,
                                             tab_index,
                                             "tenantId")
        SELECT concat_ws('|', concat(m.from_weight, '-', m.to_weight), m.unit, m.type, m.ratio),
               CASE WHEN lower(m.carriage) = 'on' THEN 'Air On-Carriage'
                    WHEN lower(m.carriage) = 'pre' THEN 'Air Pre-Carriage'
               END,
               cast(m.ratio AS TEXT),
               m.loc,
               m.document_serial,
               'OTHER',
               'Ratio Changed',
               m.via_loc,
               cast(p.ratio AS TEXT),
               m.record_id,
               m.tab_index,
               '005237f9-6779-4c68-89d6-d0800559d4f4'
          FROM mrr.lcl_pre_on_carriage AS m
               INNER JOIN prod.lcl_pre_on_carriage AS p
               ON m.via_loc = p.via_loc AND m.loc = p.loc AND m.from_weight = p.from_weight AND
                  m.to_weight = p.to_weight AND m.type = p.type AND m.carriage = p.carriage AND m.ratio != p.ratio AND
                  p.active = TRUE
         WHERE m.document_serial = p_document_serial AND m.tab_index = p_tab_index;
        ---------------------PRE/ON CARRIAGE UNIT TYPE EXCEPTION---------------------------
        INSERT INTO prod.document_exceptions(charge_description,
                                             charge_type,
                                             document_value,
                                             destination,
                                             document_serial,
                                             exception_kind,
                                             exception_type,
                                             origin,
                                             expected_value,
                                             record_id,
                                             tab_index,
                                             "tenantId")
        SELECT concat_ws('|', concat(m.from_weight, '-', m.to_weight), m.unit, m.type, m.ratio),
               CASE WHEN lower(m.carriage) = 'on' THEN 'Air On-Carriage'
                    WHEN lower(m.carriage) = 'pre' THEN 'Air Pre-Carriage'
               END,
               cast(m.unit AS TEXT),
               m.loc,
               m.document_serial,
               'OTHER',
               'Unit Type Changed',
               m.via_loc,
               cast(p.unit AS TEXT),
               m.record_id,
               m.tab_index,
               '005237f9-6779-4c68-89d6-d0800559d4f4'
          FROM mrr.lcl_pre_on_carriage AS m
               INNER JOIN prod.lcl_pre_on_carriage AS p
               ON m.via_loc = p.via_loc AND m.loc = p.loc AND m.from_weight = p.from_weight AND
                  m.to_weight = p.to_weight AND m.type = p.type AND m.carriage = p.carriage AND m.unit != p.unit AND
                  p.active = TRUE
         WHERE m.document_serial = p_document_serial AND m.tab_index = p_tab_index; ---------------------PRE/ON CARRIAGE VALIDITY EXCEPTION---------------------------
    --     INSERT INTO prod.document_exceptions(charge_description, charge_type, document_value,
    --                                          destination, document_serial,exception_kind, exception_type, origin,
    --                                          expected_value, record_id, tab_index, "tenantId")
    --     SELECT concat_ws('|', concat(m.from_weight, '-', m.to_weight), m.unit, m.type, m.ratio),
    --            CASE WHEN lower(m.carriage) = 'on' THEN 'Air On-Carriage'
    --                 WHEN lower(m.carriage) = 'pre' THEN 'Air Pre-Carriage' END,
    --            cast(m.valid_from_date AS TEXT),
    --            m.loc,
    --            m.document_serial,
    --            'OTHER',
    --            'Validity Exception',
    --            m.via_loc,
    --            concat('After - ', cast(p.valid_to_date AS TEXT)),
    --            m.record_id,
    --            m.tab_index,
    --            '005237f9-6779-4c68-89d6-d0800559d4f4'
    --       FROM mrr.lcl_pre_on_carriage                 AS m
    --                INNER JOIN prod.lcl_pre_on_carriage AS p
    --                ON m.via_loc = p.via_loc AND m.loc = p.loc AND m.from_weight = p.from_weight AND
    --                   m.to_weight = p.to_weight AND m.type = p.type AND m.carriage = p.carriage AND p.active = TRUE AND
    --                   m.valid_from_date < p.valid_to_date
    --      WHERE m.document_serial = p_document_serial
    --        AND m.tab_index = p_tab_index;

    END IF;
END ;
$$;

alter procedure prod.stardox_lcl_insert_doc_other_exceptions(integer, text, integer) owner to "Postgresadmin";

create procedure prod.stardox_lcl_insert_doc_price_exceptions(p_document_serial integer, p_table_name text, p_tab_index integer)
    language plpgsql
as
$$
BEGIN
    ----------------------------------------COLOADERS----------------------------------------
    IF p_table_name = 'lcl_coloaders' THEN
        ---------------------COLOADERS PRICE/CURRENCY EXCEPTIONS----------------------------------
        INSERT INTO prod.document_exceptions("tenantId",
                                             document_serial,
                                             tab_index,
                                             exception_kind,
                                             record_id,
                                             origin,
                                             destination,
                                             charge_type,
                                             charge_description,
                                             current_value,
                                             current_currency,
                                             previous_value,
                                             previous_currency)
        SELECT '005237f9-6779-4c68-89d6-d0800559d4f4',
               m.document_serial,
               m.tab_index,
               'PRICE',
               m.record_id,
               concat(m.origin_country, m.origin_city, m.origin_code),
               concat(m.destination_country, m.destination_city, m.destination_code),
               concat_ws('-', m.charge_type, nullif(m.charge_code, ''), m.charge_name),
               concat_ws('|', concat('Co-loader:', m.coloader), concat('Unit Type:', m.unit_type),
                         concat('Frequency:', m.frequency), concat('Trans Time:', m.trans_time),
                         concat('Remarks:', m.remarks)),
               m.rate_per_unit,
               m.currency,
               p.rate_per_unit,
               p.currency
          FROM mrr.lcl_coloaders AS m
               INNER JOIN prod.lcl_coloaders AS p
               ON m.coloader = p.coloader AND m.origin_country = p.origin_country AND m.origin_city = p.origin_city AND
                  m.origin_code = p.origin_code AND m.destination_country = p.destination_country AND
                  m.destination_city = p.destination_city AND m.destination_code = p.destination_code AND
                  m.charge_type = p.charge_type AND m.charge_code = p.charge_code AND m.charge_name = p.charge_name AND
                  p.active = TRUE AND
                  (round(CAST(m.rate_per_unit AS NUMERIC), 4) != round(CAST(p.rate_per_unit AS NUMERIC), 4) OR
                   m.currency != p.currency)
         WHERE m.document_serial = p_document_serial AND m.tab_index = p_tab_index;
        ---------------------COLOADERS EXCEPTIONS - ONLY IN CURRENT DOCUMENT-------------
        INSERT INTO prod.document_exceptions("tenantId",
                                             document_serial,
                                             tab_index,
                                             exception_kind,
                                             record_id,
                                             origin,
                                             destination,
                                             charge_type,
                                             charge_description,
                                             current_value,
                                             current_currency,
                                             previous_value,
                                             previous_currency)
        SELECT '005237f9-6779-4c68-89d6-d0800559d4f4',
               m.document_serial,
               m.tab_index,
               'PRICE',
               m.record_id,
               concat(m.origin_country, m.origin_city, m.origin_code),
               concat(m.destination_country, m.destination_city, m.destination_code),
               concat_ws('-', m.charge_type, nullif(m.charge_code, ''), m.charge_name),
               concat_ws('|', concat('Co-loader:', m.coloader), concat('Unit Type:', m.unit_type),
                         concat('Frequency:', m.frequency), concat('Trans Time:', m.trans_time),
                         concat('Remarks:', m.remarks)),
               m.rate_per_unit,
               m.currency,
               p.rate_per_unit,
               p.currency
          FROM mrr.lcl_coloaders AS m
               LEFT JOIN prod.lcl_coloaders AS p
               ON m.coloader = p.coloader AND m.origin_country = p.origin_country AND m.origin_city = p.origin_city AND
                  m.origin_code = p.origin_code AND m.destination_country = p.destination_country AND
                  m.destination_city = p.destination_city AND m.destination_code = p.destination_code AND
                  m.charge_type = p.charge_type AND m.charge_code = p.charge_code AND m.charge_name = p.charge_name AND
                  p.active = TRUE
         WHERE m.document_serial = p_document_serial
           AND m.tab_index = p_tab_index
           AND p.coloader IS NULL
           AND p.origin_country IS NULL
           AND p.origin_city IS NULL
           AND p.origin_code IS NULL
           AND p.destination_country IS NULL
           AND p.destination_city IS NULL
           AND p.destination_code IS NULL
           AND p.charge_type IS NULL
           AND p.charge_code IS NULL
           AND p.charge_name IS NULL;
        ---------------------COLOADERS EXCEPTIONS - ONLY IN PREVIOUS DOCUMENT------------
        INSERT INTO prod.document_exceptions("tenantId",
                                             document_serial,
                                             tab_index,
                                             exception_kind,
                                             record_id,
                                             origin,
                                             destination,
                                             charge_type,
                                             charge_description,
                                             current_value,
                                             current_currency,
                                             previous_value,
                                             previous_currency)
        SELECT '005237f9-6779-4c68-89d6-d0800559d4f4',
               m.document_serial,
               m.tab_index,
               'PRICE',
               m.record_id,
               concat(m.origin_country, m.origin_city, m.origin_code),
               concat(m.destination_country, m.destination_city, m.destination_code),
               concat_ws('-', m.charge_type, nullif(m.charge_code, ''), m.charge_name),
               concat_ws('|', concat('Co-loader:', m.coloader), concat('Unit Type:', m.unit_type),
                         concat('Frequency:', m.frequency), concat('Trans Time:', m.trans_time),
                         concat('Remarks:', m.remarks)),
               m.rate_per_unit,
               m.currency,
               p.rate_per_unit,
               p.currency
          FROM mrr.lcl_coloaders AS m
               RIGHT JOIN prod.lcl_coloaders AS p
               ON m.coloader = p.coloader AND m.origin_country = p.origin_country AND m.origin_city = p.origin_city AND
                  m.origin_code = p.origin_code AND m.destination_country = p.destination_country AND
                  m.destination_city = p.destination_city AND m.destination_code = p.destination_code AND
                  m.charge_type = p.charge_type AND m.charge_code = p.charge_code AND m.charge_name = p.charge_name AND
                  p.active = TRUE
         WHERE m.document_serial = p_document_serial
           AND m.tab_index = p_tab_index
           AND m.coloader IS NULL
           AND m.origin_country IS NULL
           AND m.origin_city IS NULL
           AND m.origin_code IS NULL
           AND m.destination_country IS NULL
           AND m.destination_city IS NULL
           AND m.destination_code IS NULL
           AND m.charge_type IS NULL
           AND m.charge_code IS NULL
           AND m.charge_name IS NULL;
        ---------------------COLOADERS EXCEPTIONS - MINIMUM EXCEPTION-----
        INSERT INTO prod.document_exceptions("tenantId",
                                             document_serial,
                                             tab_index,
                                             exception_kind,
                                             record_id,
                                             origin,
                                             destination,
                                             charge_type,
                                             charge_description,
                                             current_value,
                                             current_currency,
                                             previous_value,
                                             previous_currency)
        SELECT '005237f9-6779-4c68-89d6-d0800559d4f4',
               m.document_serial,
               m.tab_index,
               'PRICE',
               m.record_id,
               concat(m.origin_country, m.origin_city, m.origin_code),
               concat(m.destination_country, m.destination_city, m.destination_code),
               concat_ws('-', m.charge_type, nullif(m.charge_code, ''), m.charge_name, 'Minimum Changed'),
               concat_ws('|', concat('Co-loader:', m.coloader), concat('Unit Type:', m.unit_type),
                         concat('Frequency:', m.frequency), concat('Trans Time:', m.trans_time),
                         concat('Remarks:', m.remarks)),
               m.minimum,
               m.currency,
               p.minimum,
               p.currency
          FROM mrr.lcl_coloaders AS m
               INNER JOIN prod.lcl_coloaders AS p
               ON m.coloader = p.coloader AND m.origin_country = p.origin_country AND m.origin_city = p.origin_city AND
                  m.origin_code = p.origin_code AND m.destination_country = p.destination_country AND
                  m.destination_city = p.destination_city AND m.destination_code = p.destination_code AND
                  m.charge_type = p.charge_type AND m.charge_code = p.charge_code AND m.charge_name = p.charge_name AND
                  p.active = TRUE AND round(CAST(m.minimum AS NUMERIC), 4) != round(CAST(p.minimum AS NUMERIC), 4)
         WHERE m.document_serial = p_document_serial AND m.tab_index = p_tab_index;

        ----------------------------------------MARGINS----------------------------------------
    ELSEIF p_table_name = 'lcl_margins' THEN
        ---------------------MARGINS PRICE/CURRENCY EXCEPTIONS----------------------------------
        INSERT INTO prod.document_exceptions("tenantId",
                                             document_serial,
                                             tab_index,
                                             exception_kind,
                                             record_id,
                                             origin,
                                             destination,
                                             charge_type,
                                             charge_description,
                                             current_value,
                                             current_currency,
                                             previous_value,
                                             previous_currency)
        SELECT '005237f9-6779-4c68-89d6-d0800559d4f4',
               m.document_serial,
               m.tab_index,
               'PRICE',
               m.record_id,
               concat_ws(',', m.origin_sector, m.origin_district, m.origin_country, m.origin_port),
               concat_ws(',', m.destination_sector, m.destination_district, m.destination_country, m.destination_port),
               concat_ws('-', m.margin_type, m.charge_name),
               concat_ws('|', concat('Co-loader:', m.coloader), concat('Tender:', m.tenders), concat('Tier:', m.tier)),
               m.rate,
               m.currency,
               p.rate,
               p.currency
          FROM mrr.lcl_margins AS m
               INNER JOIN prod.lcl_margins AS p
               ON m.origin_sector = p.origin_sector AND m.origin_district = p.origin_district AND
                  m.origin_country = p.origin_country AND m.origin_port = p.origin_port AND
                  m.destination_sector = p.destination_sector AND m.destination_district = p.destination_district AND
                  m.destination_country = p.destination_country AND m.destination_port = p.destination_port AND
                  m.charge_name = p.charge_name AND m.tier = p.tier AND m.coloader = p.coloader AND
                  m.margin_type = p.margin_type AND p.active = TRUE AND
                  (round(CAST(m.rate AS NUMERIC), 4) != round(CAST(p.rate AS NUMERIC), 4) OR m.currency != p.currency)
         WHERE m.document_serial = p_document_serial AND m.tab_index = p_tab_index;
        ---------------------MARGINS EXCEPTIONS - ONLY IN CURRENT DOCUMENT-------------
        INSERT INTO prod.document_exceptions("tenantId",
                                             document_serial,
                                             tab_index,
                                             exception_kind,
                                             record_id,
                                             origin,
                                             destination,
                                             charge_type,
                                             charge_description,
                                             current_value,
                                             current_currency,
                                             previous_value,
                                             previous_currency)
        SELECT '005237f9-6779-4c68-89d6-d0800559d4f4',
               m.document_serial,
               m.tab_index,
               'PRICE',
               m.record_id,
               concat_ws(',', m.origin_sector, m.origin_district, m.origin_country, m.origin_port),
               concat_ws(',', m.destination_sector, m.destination_district, m.destination_country, m.destination_port),
               concat_ws('-', m.margin_type, m.charge_name),
               concat_ws('|', concat('Co-loader:', m.coloader), concat('Tender:', m.tenders), concat('Tier:', m.tier)),
               m.rate,
               m.currency,
               p.rate,
               p.currency
          FROM mrr.lcl_margins AS m
               LEFT JOIN prod.lcl_margins AS p
               ON m.origin_sector = p.origin_sector AND m.origin_district = p.origin_district AND
                  m.origin_country = p.origin_country AND m.origin_port = p.origin_port AND
                  m.destination_sector = p.destination_sector AND m.destination_district = p.destination_district AND
                  m.destination_country = p.destination_country AND m.destination_port = p.destination_port AND
                  m.charge_name = p.charge_name AND m.tier = p.tier AND m.coloader = p.coloader AND
                  m.margin_type = p.margin_type AND p.active = TRUE
         WHERE m.document_serial = p_document_serial
           AND m.tab_index = p_tab_index
           AND p.origin_sector IS NULL
           AND p.origin_district IS NULL
           AND p.origin_country IS NULL
           AND p.origin_port IS NULL
           AND p.destination_sector IS NULL
           AND p.destination_district IS NULL
           AND p.destination_country IS NULL
           AND p.destination_port IS NULL
           AND p.charge_name IS NULL
           AND p.tier IS NULL
           AND p.coloader IS NULL
           AND p.margin_type IS NULL;
        ---------------------MARGINS EXCEPTIONS - ONLY IN PREVIOUS DOCUMENT------------
        INSERT INTO prod.document_exceptions("tenantId",
                                             document_serial,
                                             tab_index,
                                             exception_kind,
                                             record_id,
                                             origin,
                                             destination,
                                             charge_type,
                                             charge_description,
                                             current_value,
                                             current_currency,
                                             previous_value,
                                             previous_currency)
        SELECT '005237f9-6779-4c68-89d6-d0800559d4f4',
               m.document_serial,
               m.tab_index,
               'PRICE',
               m.record_id,
               concat_ws(',', m.origin_sector, m.origin_district, m.origin_country, m.origin_port),
               concat_ws(',', m.destination_sector, m.destination_district, m.destination_country, m.destination_port),
               concat_ws('-', m.margin_type, m.charge_name),
               concat_ws('|', concat('Co-loader:', m.coloader), concat('Tender:', m.tenders), concat('Tier:', m.tier)),
               m.rate,
               m.currency,
               p.rate,
               p.currency
          FROM mrr.lcl_margins AS m
               RIGHT JOIN prod.lcl_margins AS p
               ON m.origin_sector = p.origin_sector AND m.origin_district = p.origin_district AND
                  m.origin_country = p.origin_country AND m.origin_port = p.origin_port AND
                  m.destination_sector = p.destination_sector AND m.destination_district = p.destination_district AND
                  m.destination_country = p.destination_country AND m.destination_port = p.destination_port AND
                  m.charge_name = p.charge_name AND m.tier = p.tier AND m.coloader = p.coloader AND
                  m.margin_type = p.margin_type AND p.active = TRUE
         WHERE m.document_serial = p_document_serial
           AND m.tab_index = p_tab_index
           AND m.origin_sector IS NULL
           AND m.origin_district IS NULL
           AND m.origin_country IS NULL
           AND m.origin_port IS NULL
           AND m.destination_sector IS NULL
           AND m.destination_district IS NULL
           AND m.destination_country IS NULL
           AND m.destination_port IS NULL
           AND m.charge_name IS NULL
           AND m.tier IS NULL
           AND m.coloader IS NULL
           AND m.margin_type IS NULL;

        ----------------------------------------LOCAL CHARGES----------------------------------------
    ELSEIF p_table_name = 'lcl_local_charges' THEN
        ---------------------LOCAL CHARGES PRICE/CURRENCY EXCEPTIONS----------------------------------
        INSERT INTO prod.document_exceptions("tenantId",
                                             document_serial,
                                             tab_index,
                                             exception_kind,
                                             record_id,
                                             origin,
                                             destination,
                                             charge_type,
                                             charge_description,
                                             current_value,
                                             current_currency,
                                             previous_value,
                                             previous_currency)
        SELECT '005237f9-6779-4c68-89d6-d0800559d4f4',
               m.document_serial,
               m.tab_index,
               'PRICE',
               m.record_id,
               CASE WHEN m.charge_type = 'origin' THEN m.port_location ELSE m.other_location END,
               CASE WHEN m.charge_type = 'origin' THEN m.other_location ELSE m.port_location END,
               concat_ws('-', m.charge_code, m.charge_name, m.charge_description),
               concat_ws('|', concat('Term:', m.term), concat('Charge Side:', m.charge_type),
                         concat('Unit Type:', m.unit_type)),
               round(CAST(m.rate_per_unit AS NUMERIC), 4),
               m.currency,
               round(CAST(p.rate_per_unit AS NUMERIC), 4),
               p.currency
          FROM mrr.lcl_local_charges AS m
               INNER JOIN prod.lcl_local_charges AS p
               ON m.charge_type = p.charge_type AND m.term = p.term AND m.port_location = p.port_location AND
                  m.other_location = p.other_location AND m.coloader = p.coloader AND m.charge_code = p.charge_code AND
                  m.charge_name = p.charge_name AND m.charge_description = p.charge_description AND p.active = TRUE AND
                  (round(CAST(m.rate_per_unit AS NUMERIC), 4) != round(CAST(p.rate_per_unit AS NUMERIC), 4) OR
                   m.currency != p.currency)
         WHERE m.document_serial = p_document_serial AND m.tab_index = p_tab_index;
        ---------------------LOCAL CHARGES EXCEPTIONS - ONLY IN CURRENT DOCUMENT-----
        INSERT INTO prod.document_exceptions("tenantId",
                                             document_serial,
                                             tab_index,
                                             exception_kind,
                                             record_id,
                                             origin,
                                             destination,
                                             charge_type,
                                             charge_description,
                                             current_value,
                                             current_currency,
                                             previous_value,
                                             previous_currency)
        SELECT '005237f9-6779-4c68-89d6-d0800559d4f4',
               m.document_serial,
               m.tab_index,
               'PRICE',
               m.record_id,
               CASE WHEN m.charge_type = 'origin' THEN m.port_location ELSE m.other_location END,
               CASE WHEN m.charge_type = 'origin' THEN m.other_location ELSE m.port_location END,
               concat_ws('-', m.charge_code, m.charge_name, m.charge_description),
               concat_ws('|', concat('Term:', m.term), concat('Charge Side:', m.charge_type),
                         concat('Unit Type:', m.unit_type)),
               round(CAST(m.rate_per_unit AS NUMERIC), 4),
               m.currency,
               round(CAST(p.rate_per_unit AS NUMERIC), 4),
               p.currency
          FROM mrr.lcl_local_charges AS m
               LEFT JOIN prod.lcl_local_charges AS p
               ON m.charge_type = p.charge_type AND m.term = p.term AND m.port_location = p.port_location AND
                  m.other_location = p.other_location AND m.coloader = p.coloader AND m.charge_code = p.charge_code AND
                  m.charge_name = p.charge_name AND m.charge_description = p.charge_description AND p.active = TRUE
         WHERE m.document_serial = p_document_serial
           AND m.tab_index = p_tab_index
           AND p.charge_type IS NULL
           AND p.term IS NULL
           AND p.port_location IS NULL
           AND p.other_location IS NULL
           AND p.coloader IS NULL
           AND p.charge_code IS NULL
           AND p.charge_name IS NULL
           AND p.charge_description IS NULL;
        ---------------------LOCAL CHARGES EXCEPTIONS - ONLY IN PREVIOUS DOCUMENT-----
        INSERT INTO prod.document_exceptions("tenantId",
                                             document_serial,
                                             tab_index,
                                             exception_kind,
                                             record_id,
                                             origin,
                                             destination,
                                             charge_type,
                                             charge_description,
                                             current_value,
                                             current_currency,
                                             previous_value,
                                             previous_currency)
        SELECT '005237f9-6779-4c68-89d6-d0800559d4f4',
               m.document_serial,
               m.tab_index,
               'PRICE',
               m.record_id,
               CASE WHEN m.charge_type = 'origin' THEN m.port_location ELSE m.other_location END,
               CASE WHEN m.charge_type = 'origin' THEN m.other_location ELSE m.port_location END,
               concat_ws('-', m.charge_code, m.charge_name, m.charge_description),
               concat_ws('|', concat('Term:', m.term), concat('Charge Side:', m.charge_type),
                         concat('Unit Type:', m.unit_type)),
               round(CAST(m.rate_per_unit AS NUMERIC), 4),
               m.currency,
               round(CAST(p.rate_per_unit AS NUMERIC), 4),
               p.currency
          FROM mrr.lcl_local_charges AS m
               RIGHT JOIN prod.lcl_local_charges AS p
               ON m.charge_type = p.charge_type AND m.term = p.term AND m.port_location = p.port_location AND
                  m.other_location = p.other_location AND m.coloader = p.coloader AND m.charge_code = p.charge_code AND
                  m.charge_name = p.charge_name AND m.charge_description = p.charge_description AND p.active = TRUE
         WHERE m.document_serial = p_document_serial
           AND m.tab_index = p_tab_index
           AND m.charge_type IS NULL
           AND m.term IS NULL
           AND m.port_location IS NULL
           AND m.other_location IS NULL
           AND m.coloader IS NULL
           AND m.charge_code IS NULL
           AND m.charge_name IS NULL
           AND m.charge_description IS NULL;
        ---------------------LOCAL CHARGES EXCEPTIONS - MINIMUM EXCEPTION-----
        INSERT INTO prod.document_exceptions("tenantId",
                                             document_serial,
                                             tab_index,
                                             exception_kind,
                                             record_id,
                                             origin,
                                             destination,
                                             charge_type,
                                             charge_description,
                                             current_value,
                                             current_currency,
                                             previous_value,
                                             previous_currency)
        SELECT '005237f9-6779-4c68-89d6-d0800559d4f4',
               m.document_serial,
               m.tab_index,
               'PRICE',
               m.record_id,
               CASE WHEN m.charge_type = 'origin' THEN m.port_location ELSE m.other_location END,
               CASE WHEN m.charge_type = 'origin' THEN m.other_location ELSE m.port_location END,
               concat_ws('-', m.charge_code, m.charge_name, m.charge_description, 'Minimum Changed'),
               concat_ws('|', concat('Term:', m.term), concat('Charge Side:', m.charge_type),
                         concat('Unit Type:', m.unit_type)),
               round(CAST(m.min AS NUMERIC), 4),
               m.currency,
               round(CAST(p.min AS NUMERIC), 4),
               p.currency
          FROM mrr.lcl_local_charges AS m
               INNER JOIN prod.lcl_local_charges AS p
               ON m.charge_type = p.charge_type AND m.term = p.term AND m.port_location = p.port_location AND
                  m.other_location = p.other_location AND m.coloader = p.coloader AND m.charge_code = p.charge_code AND
                  m.charge_name = p.charge_name AND m.charge_description = p.charge_description AND p.active = TRUE AND
                  round(CAST(m.min AS NUMERIC), 4) != round(CAST(p.min AS NUMERIC), 4)
         WHERE m.document_serial = p_document_serial AND m.tab_index = p_tab_index;

        ----------------------------------------PRE/ON CARRIAGE----------------------------------------
    ELSEIF p_table_name = 'lcl_pre_on_carriage' THEN
        ---------------------PRE/ON CARRIAGE PRICE/CURRENCY EXCEPTIONS-----------------
        INSERT INTO prod.document_exceptions(charge_description,
                                             charge_type,
                                             current_currency,
                                             current_value,
                                             destination,
                                             document_serial,
                                             exception_kind,
                                             origin,
                                             previous_currency,
                                             previous_value,
                                             record_id,
                                             tab_index,
                                             "tenantId")
        SELECT concat_ws('|', concat('FromWeight:', m.from_weight), concat('ToWeight:', m.to_weight),
                         concat('UnitType:', m.unit), concat('Type:', m.type), concat('Ratio:', m.ratio)),
               CASE WHEN lower(m.carriage) = 'on' THEN 'LCL On-Carriage'
                    WHEN lower(m.carriage) = 'pre' THEN 'LCL Pre-Carriage'
               END,
               m.currency,
               round(CAST(m.price AS NUMERIC), 4),
               m.loc,
               m.document_serial,
               'PRICE',
               m.via_loc,
               p.currency,
               round(CAST(p.price AS NUMERIC), 4),
               m.record_id,
               m.tab_index,
               '005237f9-6779-4c68-89d6-d0800559d4f4'
          FROM mrr.lcl_pre_on_carriage AS m
               INNER JOIN prod.lcl_pre_on_carriage AS p
               ON m.via_loc = p.via_loc AND m.loc = p.loc AND m.from_weight = p.from_weight AND
                  m.to_weight = p.to_weight AND m.type = p.type AND m.carriage = p.carriage AND p.active = TRUE AND
                  (round(CAST(m.price AS NUMERIC), 4) != round(CAST(p.price AS NUMERIC), 4) OR m.currency != p.currency)
         WHERE m.document_serial = p_document_serial AND m.tab_index = p_tab_index;
        ---------------------PRE/ON CARRIAGE EXCEPTIONS - ONLY IN CURRENT DOCUMENT-----
        INSERT INTO prod.document_exceptions(charge_description,
                                             charge_type,
                                             current_currency,
                                             current_value,
                                             destination,
                                             document_serial,
                                             exception_kind,
                                             origin,
                                             previous_currency,
                                             previous_value,
                                             record_id,
                                             tab_index,
                                             "tenantId")
        SELECT concat_ws('|', concat('FromWeight:', m.from_weight), concat('ToWeight:', m.to_weight),
                         concat('UnitType:', m.unit), concat('Type:', m.type), concat('Ratio:', m.ratio)),
               CASE WHEN lower(m.carriage) = 'on' THEN 'LCL On-Carriage'
                    WHEN lower(m.carriage) = 'pre' THEN 'LCL Pre-Carriage'
               END,
               m.currency,
               round(CAST(m.price AS NUMERIC), 4),
               m.loc,
               m.document_serial,
               'PRICE',
               m.via_loc,
               p.currency,
               round(CAST(p.price AS NUMERIC), 4),
               m.record_id,
               m.tab_index,
               '005237f9-6779-4c68-89d6-d0800559d4f4'
          FROM mrr.lcl_pre_on_carriage AS m
               LEFT JOIN prod.lcl_pre_on_carriage AS p
               ON m.via_loc = p.via_loc AND m.loc = p.loc AND m.from_weight = p.from_weight AND
                  m.to_weight = p.to_weight AND m.type = p.type AND m.carriage = p.carriage AND p.active = TRUE
         WHERE m.document_serial = p_document_serial
           AND m.tab_index = p_tab_index
           AND p.via_loc IS NULL
           AND p.loc IS NULL
           AND p.from_weight IS NULL
           AND p.to_weight IS NULL
           AND p.type IS NULL
           AND p.carriage IS NULL;
        ---------------------PRE/ON CARRIAGE EXCEPTIONS - ONLY IN PREVIOUS DOCUMENT----
        INSERT INTO prod.document_exceptions(charge_description,
                                             charge_type,
                                             current_currency,
                                             current_value,
                                             destination,
                                             document_serial,
                                             exception_kind,
                                             origin,
                                             previous_currency,
                                             previous_value,
                                             record_id,
                                             tab_index,
                                             "tenantId")
        SELECT concat_ws('|', concat('FromWeight:', m.from_weight), concat('ToWeight:', m.to_weight),
                         concat('UnitType:', m.unit), concat('Type:', m.type), concat('Ratio:', m.ratio)),
               CASE WHEN lower(m.carriage) = 'on' THEN 'LCL On-Carriage'
                    WHEN lower(m.carriage) = 'pre' THEN 'LCL Pre-Carriage'
               END,
               m.currency,
               round(CAST(m.price AS NUMERIC), 4),
               m.loc,
               m.document_serial,
               'PRICE',
               m.via_loc,
               p.currency,
               round(CAST(p.price AS NUMERIC), 4),
               m.record_id,
               m.tab_index,
               '005237f9-6779-4c68-89d6-d0800559d4f4'
          FROM mrr.lcl_pre_on_carriage AS m
               RIGHT JOIN prod.lcl_pre_on_carriage AS p
               ON m.via_loc = p.via_loc AND m.loc = p.loc AND m.from_weight = p.from_weight AND
                  m.to_weight = p.to_weight AND m.type = p.type AND m.carriage = p.carriage AND p.active = TRUE
         WHERE m.document_serial = p_document_serial
           AND m.tab_index = p_tab_index
           AND m.via_loc IS NULL
           AND m.loc IS NULL
           AND m.from_weight IS NULL
           AND m.to_weight IS NULL
           AND m.type IS NULL
           AND m.carriage IS NULL;
        ---------------------PRE/ON CARRIAGE PRICE - MINIMUM EXCEPTIONS----------------
        INSERT INTO prod.document_exceptions(charge_description,
                                             charge_type,
                                             current_currency,
                                             current_value,
                                             destination,
                                             document_serial,
                                             exception_kind,
                                             origin,
                                             previous_currency,
                                             previous_value,
                                             record_id,
                                             tab_index,
                                             "tenantId")
        SELECT concat_ws('|', concat('FromWeight:', m.from_weight), concat('ToWeight:', m.to_weight),
                         concat('UnitType:', m.unit), concat('Type:', m.type), concat('Ratio:', m.ratio)),
               CASE WHEN lower(m.carriage) = 'on' THEN 'LCL On-Carriage - Minimum Changed'
                    WHEN lower(m.carriage) = 'pre' THEN 'LCL Pre-Carriage - Minimum Changed'
               END,
               m.currency,
               round(CAST(m.min AS NUMERIC), 4),
               m.loc,
               m.document_serial,
               'PRICE',
               m.via_loc,
               p.currency,
               round(CAST(p.min AS NUMERIC), 4),
               m.record_id,
               m.tab_index,
               '005237f9-6779-4c68-89d6-d0800559d4f4'
          FROM mrr.lcl_pre_on_carriage AS m
               INNER JOIN prod.lcl_pre_on_carriage AS p
               ON m.via_loc = p.via_loc AND m.loc = p.loc AND m.from_weight = p.from_weight AND
                  m.to_weight = p.to_weight AND m.type = p.type AND m.carriage = p.carriage AND p.active = TRUE AND
                  round(CAST(m.min AS NUMERIC), 4) != round(CAST(p.min AS NUMERIC), 4)
         WHERE m.document_serial = p_document_serial AND m.tab_index = p_tab_index;
        ---------------------PRE/ON CARRIAGE PRICE - MAXIMUM EXCEPTIONS----------------
        INSERT INTO prod.document_exceptions(charge_description,
                                             charge_type,
                                             current_currency,
                                             current_value,
                                             destination,
                                             document_serial,
                                             exception_kind,
                                             origin,
                                             previous_currency,
                                             previous_value,
                                             record_id,
                                             tab_index,
                                             "tenantId")
        SELECT concat_ws('|', concat('FromWeight:', m.from_weight), concat('ToWeight:', m.to_weight),
                         concat('UnitType:', m.unit), concat('Type:', m.type), concat('Ratio:', m.ratio)),
               CASE WHEN lower(m.carriage) = 'on' THEN 'LCL On-Carriage - Maximum Changed'
                    WHEN lower(m.carriage) = 'pre' THEN 'LCL Pre-Carriage - Maximum Changed'
               END,
               m.currency,
               round(CAST(m.max AS NUMERIC), 4),
               m.loc,
               m.document_serial,
               'PRICE',
               m.via_loc,
               p.currency,
               round(CAST(p.max AS NUMERIC), 4),
               m.record_id,
               m.tab_index,
               '005237f9-6779-4c68-89d6-d0800559d4f4'
          FROM mrr.lcl_pre_on_carriage AS m
               INNER JOIN prod.lcl_pre_on_carriage AS p
               ON m.via_loc = p.via_loc AND m.loc = p.loc AND m.from_weight = p.from_weight AND
                  m.to_weight = p.to_weight AND m.type = p.type AND m.carriage = p.carriage AND p.active = TRUE AND
                  round(CAST(m.max AS NUMERIC), 4) != round(CAST(p.max AS NUMERIC), 4)
         WHERE m.document_serial = p_document_serial AND m.tab_index = p_tab_index;

    END IF;
END ;
$$;

alter procedure prod.stardox_lcl_insert_doc_price_exceptions(integer, text, integer) owner to "Postgresadmin";



create procedure prod.stardox_lcl_insert_doc_prod(p_document_serial integer, p_table_name text)
    language plpgsql
as
$$
BEGIN
    /* UPDATE ACTIVE STATUS - In order to set a charge in PRODUCTION to NON-ACTIVE, an update statement was used. in the FROM section of the
    statement the fields that makes a charge unique were selected and filtered to only show charges that all of the
    parts of that charge were accepted by the user.
    In the WHERE of the UPDATE, a check was made between the table in PRODUCTION to MRR to make sure that we are
    updating the correct charges.

    INSERT TO PRODUCTION - Insert to PRODUCTION only charges that all the parts of the charge were
    accepted by the user. This is done by checking the EXCEPTIONS table*/
    ----------------------------------------COLOADERS----------------------------------------
    IF p_table_name = 'lcl_coloaders' THEN
        ---------------------COLOADERS - UPDATE ACTIVE STATUS--------------------
        UPDATE prod.lcl_coloaders AS p
           SET active = FALSE
          FROM (SELECT m.coloader,
                       m.origin_country,
                       m.origin_city,
                       m.origin_code,
                       m.destination_country,
                       m.destination_city,
                       m.destination_code,
                       m.charge_type,
                       m.charge_code,
                       m.charge_name
                  FROM mrr.lcl_coloaders AS m
                 WHERE m.document_serial = p_document_serial
                   AND m.record_id NOT IN (SELECT e.record_id
                                             FROM prod.document_exceptions AS e
                                            WHERE e.document_serial = p_document_serial
                                            GROUP BY e.document_serial, e.tab_index, e.record_id
                                           HAVING bool_and(e.accepted) IS FALSE)) AS mr
         WHERE mr.coloader = p.coloader
           AND mr.origin_country = p.origin_country
           AND mr.origin_city = p.origin_city
           AND mr.origin_code = p.origin_code
           AND mr.destination_country = p.destination_country
           AND mr.destination_city = p.destination_city
           AND mr.destination_code = p.destination_code
           AND mr.charge_type = p.charge_type
           AND mr.charge_code = p.charge_code
           AND mr.charge_name = p.charge_name;
        --------------------COLOADERS - INSERT TO PRODUCTION--------------------
        INSERT INTO prod.lcl_coloaders(coloader,
                                       origin_region,
                                       origin_country,
                                       origin_country_code,
                                       origin_city,
                                       origin_code,
                                       port_of_loading,
                                       destination_region,
                                       destination_country,
                                       destination_country_code,
                                       destination_city,
                                       destination_code,
                                       charge_type,
                                       charge_code,
                                       charge_name,
                                       unit_type,
                                       minimum_unit_type,
                                       rate_per_unit,
                                       minimum,
                                       maximum,
                                       currency,
                                       previous_rate_per_unit,
                                       previous_minimum,
                                       route,
                                       trans_time,
                                       frequency,
                                       valid_from_date,
                                       valid_to_date,
                                       remarks,
                                       file_name,
                                       sheet_name,
                                       created_at,
                                       load_id,
                                       tab_index,
                                       document_serial,
                                       record_id,
                                       route_number)
        SELECT coloader,
               origin_region,
               origin_country,
               origin_country_code,
               origin_city,
               origin_code,
               port_of_loading,
               destination_region,
               destination_country,
               destination_country_code,
               destination_city,
               destination_code,
               charge_type,
               charge_code,
               charge_name,
               unit_type,
               minimum_unit_type,
               rate_per_unit,
               minimum,
               maximum,
               currency,
               previous_rate_per_unit,
               previous_minimum,
               route,
               trans_time,
               frequency,
               valid_from_date,
               valid_to_date,
               remarks,
               file_name,
               sheet_name,
               created_at,
               load_id,
               tab_index,
               document_serial,
               record_id,
               route_number
          FROM mrr.lcl_coloaders AS m
         WHERE m.document_serial = p_document_serial
           AND m.record_id NOT IN (SELECT e.record_id
                                     FROM prod.document_exceptions AS e
                                    WHERE e.document_serial = p_document_serial
                                    GROUP BY e.document_serial, e.tab_index, e.record_id
                                   HAVING bool_and(e.accepted) IS FALSE);

        ----------------------------------------MARGINS----------------------------------------
    ELSEIF p_table_name = 'lcl_margins' THEN
        ---------------------MARGINS - UPDATE ACTIVE STATUS--------------------
        UPDATE prod.lcl_margins AS p
           SET active = FALSE
          FROM (SELECT m.origin_sector,
                       m.origin_district,
                       m.origin_country,
                       m.origin_port,
                       m.destination_sector,
                       m.destination_district,
                       m.destination_country,
                       m.destination_port,
                       m.charge_name,
                       m.tier,
                       m.coloader,
                       m.margin_type
                  FROM mrr.lcl_margins AS m
                 WHERE m.document_serial = p_document_serial
                   AND m.record_id NOT IN (SELECT e.record_id
                                             FROM prod.document_exceptions AS e
                                            WHERE e.document_serial = p_document_serial
                                            GROUP BY e.document_serial, e.tab_index, e.record_id
                                           HAVING bool_and(e.accepted) IS FALSE)) AS mr
         WHERE mr.origin_sector = p.origin_sector
           AND mr.origin_district = p.origin_district
           AND mr.origin_country = p.origin_country
           AND mr.origin_port = p.origin_port
           AND mr.destination_sector = p.destination_sector
           AND mr.destination_district = p.destination_district
           AND mr.destination_country = p.destination_country
           AND mr.destination_port = p.destination_port
           AND mr.charge_name = p.charge_name
           AND mr.tier = p.tier
           AND mr.coloader = p.coloader
           AND mr.margin_type = p.margin_type;
        --------------------MARGINS - INSERT TO PRODUCTION--------------------
        INSERT INTO prod.lcl_margins(origin_sector,
                                     origin_district,
                                     origin_country,
                                     origin_port,
                                     destination_sector,
                                     destination_district,
                                     destination_country,
                                     destination_port,
                                     charge_name,
                                     rate,
                                     tier,
                                     tenders,
                                     coloader,
                                     currency,
                                     margin_type,
                                     valid_from_date,
                                     valid_to_date,
                                     file_name,
                                     sheet_name,
                                     created_at,
                                     load_id,
                                     tab_index,
                                     document_serial,
                                     record_id,
                                     route_number)
        SELECT m.origin_sector,
               m.origin_district,
               m.origin_country,
               m.origin_port,
               m.destination_sector,
               m.destination_district,
               m.destination_country,
               m.destination_port,
               m.charge_name,
               m.rate,
               m.tier,
               m.tenders,
               m.coloader,
               m.currency,
               m.margin_type,
               m.valid_from_date,
               m.valid_to_date,
               m.file_name,
               m.sheet_name,
               m.created_at,
               m.load_id,
               m.tab_index,
               m.document_serial,
               m.record_id,
               m.route_number
          FROM mrr.lcl_margins AS m
         WHERE m.document_serial = p_document_serial
           AND m.record_id NOT IN (SELECT e.record_id
                                     FROM prod.document_exceptions AS e
                                    WHERE e.document_serial = p_document_serial
                                    GROUP BY e.document_serial, e.tab_index, e.record_id
                                   HAVING bool_and(e.accepted) IS FALSE);

        ----------------------------------------LOCAL CHARGES----------------------------------------
    ELSEIF p_table_name = 'lcl_local_charges' THEN
        ---------------------LOCAL CHARGES - UPDATE ACTIVE STATUS--------------------
        UPDATE prod.lcl_local_charges AS p
           SET active = FALSE
          FROM (SELECT m.charge_type,
                       m.term,
                       m.port_location,
                       m.other_location,
                       m.coloader,
                       m.charge_code,
                       m.charge_name,
                       m.charge_description
                  FROM mrr.lcl_local_charges AS m
                 WHERE m.document_serial = p_document_serial
                   AND m.record_id NOT IN (SELECT e.record_id
                                             FROM prod.document_exceptions AS e
                                            WHERE e.document_serial = p_document_serial
                                            GROUP BY e.document_serial, e.tab_index, e.record_id
                                           HAVING bool_and(e.accepted) IS FALSE)) AS mr
         WHERE mr.charge_type = p.charge_type
           AND mr.term = p.term
           AND mr.port_location = p.port_location
           AND mr.other_location = p.other_location
           AND mr.coloader = p.coloader
           AND mr.charge_code = p.charge_code
           AND mr.charge_name = p.charge_name
           AND mr.charge_description = p.charge_description;
        --------------------LOCAL CHARGES - INSERT TO PRODUCTION--------------------
        INSERT INTO prod.lcl_local_charges(charge_type,
                                           term,
                                           region,
                                           port_location,
                                           other_location,
                                           charge_based_on,
                                           currency,
                                           charge_code,
                                           charge_name,
                                           unit_type,
                                           min,
                                           rate_per_unit,
                                           mandatory,
                                           remarks,
                                           coloader,
                                           country,
                                           charge_description,
                                           valid_from_date,
                                           valid_to_date,
                                           file_name,
                                           sheet_name,
                                           created_at,
                                           load_id,
                                           tab_index,
                                           document_serial,
                                           record_id,
                                           route_number)
        SELECT m.charge_type,
               m.term,
               m.region,
               m.port_location,
               m.other_location,
               m.charge_based_on,
               m.currency,
               m.charge_code,
               m.charge_name,
               m.unit_type,
               m.min,
               m.rate_per_unit,
               m.mandatory,
               m.remarks,
               m.coloader,
               m.country,
               m.charge_description,
               m.valid_from_date,
               m.valid_to_date,
               m.file_name,
               m.sheet_name,
               m.created_at,
               m.load_id,
               m.tab_index,
               m.document_serial,
               m.record_id,
               m.route_number
          FROM mrr.lcl_local_charges AS m
         WHERE m.document_serial = p_document_serial
           AND m.record_id NOT IN (SELECT e.record_id
                                     FROM prod.document_exceptions AS e
                                    WHERE e.document_serial = p_document_serial
                                    GROUP BY e.document_serial, e.tab_index, e.record_id
                                   HAVING bool_and(e.accepted) IS FALSE);

        ----------------------------------------PRE/ON CARRIAGE----------------------------------------
    ELSEIF p_table_name = 'lcl_pre_on_carriage' THEN
        --------------------PRE/ON CARRIAGE - UPDATE ACTIVE STATUS--------------------
        UPDATE prod.lcl_pre_on_carriage AS p
           SET active = FALSE
          FROM (SELECT m.via_loc, m.loc, m.from_weight, m.to_weight, m.type, m.carriage
                  FROM mrr.lcl_pre_on_carriage AS m
                 WHERE m.document_serial = p_document_serial
                   AND m.record_id NOT IN (SELECT e.record_id
                                             FROM prod.document_exceptions AS e
                                            WHERE e.document_serial = p_document_serial
                                            GROUP BY e.document_serial, e.tab_index, e.record_id
                                           HAVING bool_and(e.accepted) IS FALSE)) AS mr
         WHERE mr.via_loc = p.via_loc
           AND mr.loc = p.loc
           AND mr.from_weight = p.from_weight
           AND mr.to_weight = p.to_weight
           AND mr.type = p.type
           AND mr.carriage = p.carriage;
        --------------------PRE/ON CARRIAGE - INSERT TO PRODUCTION--------------------
        INSERT INTO prod.lcl_pre_on_carriage(via_loc,
                                             loc,
                                             from_weight,
                                             to_weight,
                                             price,
                                             currency,
                                             min,
                                             max,
                                             unit,
                                             type,
                                             comment,
                                             terms,
                                             carriage,
                                             loc_port,
                                             via_loc_port,
                                             country_code,
                                             ratio,
                                             valid_from_date,
                                             valid_to_date,
                                             from_zip,
                                             to_zip,
                                             document_serial,
                                             record_id,
                                             route_number,
                                             sheet_name,
                                             tab_index,
                                             via_loc_country_code,
                                             loc_country_code)
        SELECT via_loc,
               loc,
               from_weight,
               to_weight,
               price,
               currency,
               min,
               max,
               unit,
               type,
               comment,
               terms,
               carriage,
               loc_port,
               via_loc_port,
               country_code,
               ratio,
               valid_from_date,
               valid_to_date,
               from_zip,
               to_zip,
               document_serial,
               record_id,
               route_number,
               sheet_name,
               tab_index,
               via_loc_country_code,
               loc_country_code
          FROM mrr.lcl_pre_on_carriage AS m
         WHERE m.document_serial = p_document_serial
           AND m.record_id NOT IN (SELECT e.record_id
                                     FROM prod.document_exceptions AS e
                                    WHERE e.document_serial = p_document_serial
                                    GROUP BY e.document_serial, e.tab_index, e.record_id
                                   HAVING bool_and(e.accepted) IS FALSE);

    END IF;
END;
$$;

alter procedure prod.stardox_lcl_insert_doc_prod(integer, text) owner to "Postgresadmin";



create procedure prod.stardox_lcl_insert_doc_routes(p_document_serial integer, p_table_name text, p_tab_index integer)
    language plpgsql
as
$$
BEGIN
    ------------------------------COLOADERS ROUTES------------------------------
    IF p_table_name = 'lcl_coloaders' THEN
        INSERT INTO prod.document_routes("tenantId",
                                         document_serial,
                                         route_number,
                                         origin_country_name,
                                         origin_city_name,
                                         origin_port_code,
                                         destination_country_name,
                                         destination_city_name,
                                         destination_port_code,
                                         validity_date,
                                         route_name,
                                         tab_index,
                                         service)
        SELECT '005237f9-6779-4c68-89d6-d0800559d4f4',
               m.document_serial,
               m.route_number,
               m.origin_country,
               m.origin_city,
               m.origin_code,
               m.destination_country,
               m.destination_city,
               m.destination_code,
               max(m.valid_to_date),
               concat_ws('-', concat_ws(',', m.origin_country, m.origin_city, m.origin_code),
                         concat_ws(',', m.destination_country, m.destination_city, m.destination_code)),
               m.tab_index,
               'Co-Loaders'
          FROM mrr.lcl_coloaders AS m
         WHERE m.tab_index = p_tab_index AND m.document_serial = p_document_serial
         GROUP BY m.document_serial,
                  m.route_number,
                  m.origin_country,
                  m.origin_city,
                  m.origin_code,
                  m.destination_country,
                  m.destination_city,
                  m.destination_code,
                  m.route_number,
                  m.tab_index;

        ------------------------------MARGINS ROUTES------------------------------
    ELSEIF p_table_name = 'lcl_margins' THEN
        INSERT INTO prod.document_routes("tenantId",
                                         document_serial,
                                         route_number,
                                         origin_country_name,
                                         origin_port_code,
                                         destination_country_name,
                                         destination_port_code,
                                         validity_date,
                                         service,
                                         route_name,
                                         tab_index)
        SELECT '005237f9-6779-4c68-89d6-d0800559d4f4',
               m.document_serial,
               m.route_number,
               concat_ws(',', m.origin_sector, m.origin_district, m.origin_country),
               origin_port,
               concat_ws(',', m.destination_sector, m.destination_district, m.destination_country),
               m.destination_port,
               max(m.valid_to_date),
               'Margins',
               concat_ws('-', concat_ws(',', m.origin_sector, m.origin_district, m.origin_country, m.origin_port),
                         concat_ws(',', m.destination_sector, m.destination_district, m.destination_country,
                                   m.destination_port)),
               m.tab_index
          FROM mrr.lcl_margins AS m
         WHERE m.tab_index = p_tab_index AND m.document_serial = p_document_serial
         GROUP BY origin_sector,
                  origin_district,
                  origin_country,
                  origin_port,
                  destination_sector,
                  destination_district,
                  destination_country,
                  destination_port,
                  document_serial,
                  route_number,
                  tab_index;

        ------------------------------LOCAL CHARGES ROUTES------------------------------
    ELSEIF p_table_name = 'lcl_local_charges' THEN
        INSERT INTO prod.document_routes("tenantId",
                                         document_serial,
                                         route_number,
                                         origin_country_code,
                                         origin_port_code,
                                         destination_country_code,
                                         destination_port_code,
                                         route_name,
                                         tab_index,
                                         service,
                                         validity_date)
        SELECT '005237f9-6779-4c68-89d6-d0800559d4f4',
               m.document_serial,
               m.route_number,
               CASE WHEN m.charge_type = 'origin' THEN m.country END,
               CASE WHEN m.charge_type = 'origin' THEN m.port_location ELSE m.other_location END,
               CASE WHEN m.charge_type = 'destination' THEN m.country END,
               CASE WHEN m.charge_type = 'origin' THEN m.other_location ELSE m.port_location END,
               concat_ws('-', CASE WHEN m.charge_type = 'origin' THEN m.port_location ELSE m.other_location END,
                         CASE WHEN m.charge_type = 'origin' THEN m.other_location ELSE m.port_location END),
               m.tab_index,
               'Local Charges',
               m.valid_to_date
          FROM mrr.lcl_local_charges AS m
         WHERE m.tab_index = p_tab_index AND m.document_serial = p_document_serial
         GROUP BY m.document_serial,
                  m.route_number,
                  CASE WHEN m.charge_type = 'origin' THEN m.country END,
                  CASE WHEN m.charge_type = 'origin' THEN m.port_location ELSE m.other_location END,
                  CASE WHEN m.charge_type = 'destination' THEN m.country END,
                  CASE WHEN m.charge_type = 'origin' THEN m.other_location ELSE m.port_location END,
                  m.tab_index,
                  m.valid_to_date;

        ------------------------------PRE/ON CARRIAGE ROUTES------------------------------
    ELSEIF p_table_name = 'lcl_pre_on_carriage' THEN
        INSERT INTO prod.document_routes ("tenantId",
                                          document_serial,
                                          route_number,
                                          origin_port_code,
                                          origin_country_code,
                                          destination_port_code,
                                          destination_country_code,
                                          route_name,
                                          tab_index,
                                          validity_date,
                                          service)
        SELECT '005237f9-6779-4c68-89d6-d0800559d4f4',
               m.document_serial,
               m.route_number,
               m.via_loc_port,
               m.via_loc_country_code,
               m.loc_port,
               m.loc_country_code,
               concat_ws('-', m.via_loc_port, m.loc_port),
               m.tab_index,
               max(m.valid_to_date),
               'Pre/On Carriage'
          FROM mrr.lcl_pre_on_carriage AS m
         WHERE m.document_serial = p_document_serial AND m.tab_index = p_tab_index
         GROUP BY m.route_number, m.document_serial, m.via_loc_port, m.loc_port, m.tab_index;

    END IF;
END;
$$;

alter procedure prod.stardox_lcl_insert_doc_routes(integer, text, integer) owner to "Postgresadmin";



create procedure prod.stardox_lcl_routing_matrix(p_document_serial integer, p_table_name text, p_tab_index integer)
    language plpgsql
as
$$
BEGIN
    IF p_table_name = 'lcl_routing_matrix' THEN
        UPDATE prod.lcl_routing_matrix SET active = FALSE WHERE document_serial != p_document_serial;

        INSERT INTO prod.lcl_routing_matrix(route,
                                            coloader,
                                            routing_type,
                                            origin_region,
                                            origin_country_code,
                                            origin_city,
                                            destination_region,
                                            destination_country_code,
                                            destination_city,
                                            file_name,
                                            sheet_name,
                                            created_at,
                                            load_id,
                                            tab_index,
                                            document_serial,
                                            record_id,
                                            valid_to_date,
                                            valid_from_date)
        SELECT m.route,
               m.coloader,
               m.routing_type,
               m.origin_region,
               m.origin_country_code,
               m.origin_city,
               m.destination_region,
               m.destination_country_code,
               m.destination_city,
               m.file_name,
               m.sheet_name,
               m.created_at,
               m.load_id,
               m.tab_index,
               m.document_serial,
               m.record_id,
               m.valid_to_date,
               m.valid_from_date
          FROM mrr.lcl_routing_matrix AS m
         WHERE m.document_serial = p_document_serial AND m.tab_index = p_tab_index;
    END IF;
END;
$$;

alter procedure prod.stardox_lcl_routing_matrix(integer, text, integer) owner to "Postgresadmin";

create procedure prod.tardox_lcl_update_doc_table_name(p_tenantid text, p_document_serial integer, p_table_name text)
    language sql
as
$$
UPDATE prod.documents
   SET
       table_name = p_table_name
 WHERE
     document_serial = p_document_serial
	 AND "tenantId"= p_tenantid
$$;

alter procedure prod.stardox_lcl_update_doc_table_name(text, integer, text) owner to "Postgresadmin";





